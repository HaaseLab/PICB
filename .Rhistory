library(devtools)
use_r()
use_r("PICBload.R")
use_r("PICBbuild.R")
use_r("PICBannotate.R")
use_r("PICBcombine.R")
use_cc0_license()
document()
document()
document()
document()
check()
?PICBload
document()
?PICBload
document()
?PICBbuild
?PICBload
document()
check()
check()
check()
check()
check()
check()
check()
check()
check()
check()
?colnames<-
;
?colnames
?keepStandardChromosomes
?dropSeqlevels
?seqlevels
?slidingWindows
?countOverlaps
?sort.GenomicRanges
check()
check()
check()
check()
check()
check()
check()
?coverage
?countOverlaps
check()
check()
?findOverlapPairs
?pintersect
?findOverlapPairs
GenomicRanges::pintersect()
GenomicRanges::findOverlapPairs()
?pintersect
GenomicRanges::pintersect()
check()
check()
?getBSgenome
??getBSgenome
?standardChromosomes
GenomicRanges::GRanges()
check()
check()
?subsetByOverlaps
check()
source("~/Code/PICB/PICBannotate.R")
source("~/Code/PICB/PICBload.R")
source("~/Code/PICB/PICBbuild.R")
source("~/Code/PICB/PICBcombine.R")
MIWIalignments<-PICBload("~/Science/For Alex Mouse Data/piRNA libraries/WT_PS_MIWI_Aligned.sortedByCoord.out.bam", "BSgenome.Mmusculus.UCSC.mm10")
MIWIranges<-PICBbuild(MIWIalignments, "BSgenome.Mmusculus.UCSC.mm10")
MIWIord<-order(MIWIranges$regions$uniq_reads_FPKM)
MIWIregions2<-MIWIranges$regions[MIWIord]
MIWIregions2[(seqnames(MIWIregions2)=="chr7") & (start(MIWIregions2)>73773000) & (start(MIWIregions2)<74000000)]
MIWIordABS<-order(MIWIranges$regions$uniq_reads_FPM, decreasing = TRUE)
MIWIregions3<-MIWIranges$regions[MIWIordABS]
dfMIWIplot=as.data.frame(MIWIregions3)
dfMIWIplot$number=1:nrow(dfMIWIplot)
library(ggplot2)
library(ggbio)
ggplot(dfMIWIplot, aes(x=number, y=cumsum(uniq_reads_FPM)/1e6, color=seqnames))+geom_point()+
ylab("Unique mappers explained")
for (t in c("seeds", "clusters", "regions")){
#print(c(m,t))
MIWIranges[[t]]=PICBannotate(MIWIranges[[t]],MIWIalignments, PROVIDE.NON.NORMALIZED = TRUE)
#print(sum(mcols(MIWIranges[[t]])[[m]])/length(MIWIalignments$unique))
}
source("~/Code/PICB/PICBannotate.R")
source("~/Code/PICB/PICBload.R")
source("~/Code/PICB/PICBbuild.R")
source("~/Code/PICB/PICBcombine.R")
MIWIalignments<-PICBload("~/Science/For Alex Mouse Data/piRNA libraries/WT_PS_MIWI_Aligned.sortedByCoord.out.bam", "BSgenome.Mmusculus.UCSC.mm10")
MIWIranges<-PICBbuild(MIWIalignments, "BSgenome.Mmusculus.UCSC.mm10")
MIWIord<-order(MIWIranges$regions$uniq_reads_FPKM)
MIWIregions2<-MIWIranges$regions[MIWIord]
MIWIregions2[(seqnames(MIWIregions2)=="chr7") & (start(MIWIregions2)>73773000) & (start(MIWIregions2)<74000000)]
MIWIordABS<-order(MIWIranges$regions$uniq_reads_FPM, decreasing = TRUE)
MIWIregions3<-MIWIranges$regions[MIWIordABS]
dfMIWIplot=as.data.frame(MIWIregions3)
dfMIWIplot$number=1:nrow(dfMIWIplot)
MIWIordABS<-order(MIWIranges$regions$uniq_reads_FPM, decreasing = TRUE)
MIWIregions3<-MIWIranges$regions[MIWIordABS]
dfMIWIplot=as.data.frame(MIWIregions3)
dfMIWIplot$number=1:nrow(dfMIWIplot)
library(ggplot2)
library(ggbio)
ggplot(dfMIWIplot, aes(x=number, y=cumsum(uniq_reads_FPM)/1e6, color=seqnames))+geom_point()+
ylab("Unique mappers explained")
m ="width_in_nt"
for (t in c("seeds", "clusters", "regions")){
print(c(m,t))
#print(c(m,t))
MIWIranges[[t]]=PICBannotate(MIWIranges[[t]],MIWIalignments, PROVIDE.NON.NORMALIZED = TRUE)
#print(sum(mcols(MIWIranges[[t]])[[m]])/length(MIWIalignments$unique))
}
MIWIranges
source("~/Code/PICB/PICBannotate.R")
source("~/Code/PICB/PICBload.R")
source("~/Code/PICB/PICBbuild.R")
source("~/Code/PICB/PICBcombine.R")
MIWIalignments<-PICBload("~/Science/For Alex Mouse Data/piRNA libraries/WT_PS_MIWI_Aligned.sortedByCoord.out.bam", "BSgenome.Mmusculus.UCSC.mm10")
MIWIranges<-PICBbuild(MIWIalignments, "BSgenome.Mmusculus.UCSC.mm10")
MIWIranges$regions
mcols(MIWIranges$regions)
colnames(mcols(MIWIranges$regions))
library(PICB)
library(PICB)
install.packages("seqinr")
library(seqinr)
seqinr::read.fasta()
15373052/4
963476/(15373052/4)
48126196/4
48126196/4 - 15373052/4
??as.data.frame.table
?as.data.table
??resize
GenomicRanges::intersect
?order
install.packages("roxygen2")
install.packages("BiocManager")
BiocManager::install("IRanges")
BiocManager::install("BSgenome")
BiocManager::install("seqinr")
BiocManager::install("GenomicRanges")
BiocManager::install("GenomicAlignments")
BiocManager::install("GenomeInfoDb")
BiocManager::install("Biostrings")
BiocManager::install("Rsamtools")
install.packages("data.table")
install.packages("openxlsx")
as.numeric("0.567")
seq
seq(1,5,2)
